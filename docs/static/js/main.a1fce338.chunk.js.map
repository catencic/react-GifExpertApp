{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setinputValue","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","target","getGrid","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setState","useEffect","then","useFetchGifs","GifExpertApp","categories","Divroot","document","querySelector","ReactDOM","render"],"mappings":"2MAKaA,EAAc,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cAAmB,EAERC,mBAAS,IAFD,mBAErCC,EAFqC,KAEzBC,EAFyB,KAmB5C,OAEI,sBAAMC,SAZW,SAACC,GAClBA,EAAEC,iBACAJ,EAAWK,OAAOC,OAAS,IAC7BR,GAAe,SAAAS,GAAI,OAAKP,GAAL,mBAAoBO,OACvCN,EAAc,MAQd,SACI,uBACCO,KAAK,OACLC,MAAOT,EACPU,SArBiB,SAACP,GAErBF,EAAcE,EAAEQ,OAAOF,a,+BCVpBG,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DAEbC,EAFa,iDAEmCC,UAAUH,GAF7C,+DAGAI,MAAMF,GAHN,cAGbG,EAHa,gBAIEA,EAAKC,OAJP,uBAIZC,EAJY,EAIZA,KAEDC,EAAOD,EAAKE,KAAK,SAAAC,GAAO,IAAD,EACzB,MAAO,CACHC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QAVvB,kBAgBZM,GAhBY,4CAAH,sDCCCO,EAAc,SAAC,GAAuB,EAArBJ,GAAsB,IAAlBC,EAAiB,EAAjBA,MAAOV,EAAU,EAAVA,IAIzC,OACI,sBAAKc,UAAU,yCAAf,UACI,qBAAKC,IAAKf,EAAKgB,IAAKN,IACpB,4BAAKA,QCJIO,EAAU,SAAC,GAAkB,IAAfnB,EAAc,EAAdA,SAAc,ECDjB,SAACA,GAAc,IAAD,EAChBd,mBAAS,CAC/BqB,KAAM,GACNa,SAAS,IAH6B,mBACnCC,EADmC,KAC5BC,EAD4B,KAqBtC,OAfAC,qBAAU,WACNxB,EAAQC,GACPwB,MAAM,SAAAd,GAGXY,EAAS,CACLf,KAAMG,EACNU,SAAS,SAMX,CAACpB,IAEIqB,EDjByBI,CAAazB,GAAhCa,EAH4B,EAGjCN,KAAaa,EAHoB,EAGpBA,QAMrB,OACG,qCACG,oBAAIJ,UAAU,oCAAd,SAAoDhB,IAElDoB,GAAW,mBAAGJ,UAAU,oCAAb,wBAEX,qBAAKA,UAAU,YAAf,SAKIH,EAAOJ,KAAK,SAACC,GAAD,OACR,cAAC,EAAD,eAEIA,GADCA,EAAIC,aEqBtBe,EA3CI,WAAK,IAAD,EAGaxC,mBAAS,CAAC,cAHvB,mBAGhByC,EAHgB,KAGJ1C,EAHI,KAUnB,OACA,qCAEA,8CACA,cAAC,EAAD,CAAaA,cAAeA,IAC5B,uBAGA,6BAEI0C,EAAWlB,KAAI,SAAAT,GAAQ,OACtB,cAAC,EAAD,CAEAA,SAAUA,GADLA,YCpBR4B,EAAUC,SAASC,cAAc,SACvCC,IAASC,OACL,cAAC,EAAD,IAEFJ,K","file":"static/js/main.a1fce338.chunk.js","sourcesContent":["import React, { useState } from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\n\r\n\r\nexport const AddCategory = ({setCategories}) => {\r\n\r\n    const [inputValue, setinputValue] = useState('');\r\n\r\n    const handleInputChange = (e) => {\r\n          \r\n          setinputValue(e.target.value);\r\n    } \r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n       if(inputValue.trim().length > 2) {\r\n        setCategories( cats => [inputValue, ...cats]);\r\n        setinputValue('');\r\n       }\r\n\r\n       \r\n    }\r\n\r\n    return (\r\n        \r\n        <form onSubmit={handleSubmit}>\r\n            <input\r\n             type='text'\r\n             value={inputValue}\r\n             onChange={handleInputChange}\r\n            />\r\n        </form>        \r\n    )\r\n}\r\n\r\nAddCategory.propTypes={\r\n    setCategories: PropTypes.func.isRequired,\r\n}\r\n\r\n\r\n\r\n","\r\nexport const getGrid  =async (category) =>{ \r\n\r\n    const url = `https://api.giphy.com/v1/gifs/search?q=${encodeURI(category) }&limit=10&api_key=ONcRUyNEv6VYhIeZWhpfARaTaWCiAZZs`\r\n    const resp = await fetch(url);\r\n    const {data} = await resp.json();\r\n\r\n    const gifs = data.map( img =>{\r\n        return {\r\n            id: img.id,\r\n            title: img.title,\r\n            url: img.images?.downsized_medium.url,\r\n\r\n        }\r\n    })\r\n\r\n    \r\n    return gifs;\r\n    }","import React from 'react'\r\n\r\n        export const GifGridItem = ( {id, title, url} ) => {\r\n\r\n      //  console.log(id, title, url);\r\n\r\n        return (\r\n            <div className=\"card animate__animated animate__fadeIn\">\r\n                <img src={url} alt={title} />\r\n                <p>{ title }</p>\r\n            </div>\r\n        )\r\n        }\r\n","//import React, { useEffect, useState } from 'react'\r\nimport { useFetchGifs } from '../hooks/useFetchGifs'\r\n//import { getGrid } from '../helpers/getGifs';\r\nimport { GifGridItem } from './GifGridItem'; \r\n\r\n            export const GifGrid = ( { category}) => {\r\n\r\n            // const [images, setImages] = useState([]);\r\n            const { data:images, loading} = useFetchGifs(category);\r\n           \r\n            \r\n          \r\n\r\n            \r\n            return (\r\n               <>\r\n                  <h3 className=\"animate__animated animate__fadeIn\">{ category }</h3>\r\n\r\n                  { loading && <p className=\"animate__animated animate__flash \">Loading...</p>}\r\n          \r\n                    <div className=\"card-grid\">\r\n                \r\n                \r\n                \r\n                        {\r\n                        images.map( (img) =>\r\n                            <GifGridItem \r\n                            key={img.id}\r\n                            {...img}\r\n                            />\r\n                        )\r\n                        }\r\n                    \r\n                    </div>\r\n            \r\n               </>\r\n            )\r\n        }\r\n","\r\nimport  { useEffect, useState } from 'react'\r\nimport { getGrid } from '../helpers/getGifs';\r\n\r\n        export const useFetchGifs = (category) => {\r\n        const [state, setState] = useState({\r\n            data: [],\r\n            loading: true,\r\n        });\r\n\r\n            useEffect(() =>{\r\n                getGrid(category)\r\n                .then( img => {\r\n\r\n        \r\n            setState({\r\n                data: img,\r\n                loading: false,\r\n            });\r\n        \r\n\r\n                \r\n                })\r\n            },[category]) \r\n\r\n            return state;\r\n        }\r\n","import { useState } from \"react\";\r\nimport { AddCategory } from \"./components/AddCategory\";\r\nimport { GifGrid } from \"./components/GifGrid\";\r\n\r\n\r\nconst GifExpertApp=()=>{\r\n\r\n\r\nconst [categories, setCategories] = useState(['One punch']);\r\n   \r\n/* const handleAdd = ()=>{\r\n    setCategories([...categories,'Naruto']);\r\n} */\r\n    \r\n    \r\n    return (\r\n    <> \r\n    \r\n    <h2>GifExpertApp</h2>\r\n    <AddCategory setCategories={setCategories}/>\r\n    <hr></hr>\r\n\r\n    \r\n    <ol>\r\n         {\r\n        categories.map(category=> \r\n         <GifGrid \r\n         key={category}\r\n         category={category}\r\n         />\r\n        )\r\n        \r\n        } \r\n    \r\n     </ol>\r\n    </>)\r\n};\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nexport default GifExpertApp;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n\nimport GifExpertApp from './GifExpertApp';\n\n\nconst Divroot = document.querySelector('#root');\nReactDOM.render(\n    <GifExpertApp />,\n  \n  Divroot\n);\n\n\n\n"],"sourceRoot":""}